name: Build 🏗️ and Publish 📦️

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    name: Publishing for ${{ matrix.job.os }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: true
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            use-cross: true
          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
            use-cross: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true

    steps:
      - name: Installing Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.job.target }}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cross
        if: matrix.job.use-cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Cargo build
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.7
        shell: bash
        run: |
          if [[ "${{ matrix.job.use-cross }}" == "true" ]]; then
            cross build --release --target ${{ matrix.job.target }}
          else
            cargo build --release --target ${{ matrix.job.target }}
          fi

      - name: Install required dependencies
        shell: bash
        run: |
          if [[ ${{ matrix.job.target }} == arm-unknown-linux-gnueabihf ]]; then
            DEBIAN_FRONTEND=noninteractive sudo apt-get -y update
            DEBIAN_FRONTEND=noninteractive sudo apt-get -y install binutils-arm-linux-gnueabihf
          fi
          if [[ ${{ matrix.job.target }} == aarch64-unknown-linux-gnu ]]; then
            DEBIAN_FRONTEND=noninteractive sudo apt-get -y update
            DEBIAN_FRONTEND=noninteractive sudo apt-get -y install binutils-aarch64-linux-gnu
          fi

      - name: Packaging final binary
        shell: bash
        env:
          TARGET: ${{ matrix.job.target }}
          PROJECT_NAME: ia-get
          PACKAGE_NAME: ia-get
          OS_NAME: ${{ matrix.job.os }}
        run: ./.github/workflows/before_deploy.sh

      - name: Generate release notes with hashes
        shell: bash
        run: |
          echo "## 📦 Artifact Checksums (SHA256)" > HASHES_${{ matrix.job.target }}.md
          echo "" >> HASHES_${{ matrix.job.target }}.md
          for file in *.sha256; do
            if [ -f "$file" ]; then
              basename="${file%.sha256}"
              hash=$(cat "$file" | cut -d' ' -f1)
              echo "- **${basename}**: \`${hash}\`" >> HASHES_${{ matrix.job.target }}.md
            fi
          done

      - name: Releasing assets
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            ia-get-*-${{ matrix.job.target }}.*
            ia-get*.deb
            HASHES_${{ matrix.job.target }}.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_release_notes:
    name: Update Release Notes
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref_type == 'tag'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download release assets to collect hashes
        shell: bash
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          
          # Get all release assets and their info
          gh release view $TAG_NAME --json assets --jq '.assets[] | select(.name | endswith(".sha256")) | .downloadUrl' | while read url; do
            curl -sL "$url" >> ALL_HASHES.txt
          done
          
          # Generate comprehensive release notes
          cat > FINAL_RELEASE_NOTES.md << 'EOF'
          # 🚀 Release ${TAG_NAME}
          
          ## 📥 Downloads
          
          ### Quick Downloads
          - **Linux (x86_64)**: [ia-get-${TAG_NAME}-x86_64-unknown-linux-gnu.tar.gz](https://github.com/Gameaday/ia-get-cli/releases/download/${TAG_NAME}/ia-get-${TAG_NAME}-x86_64-unknown-linux-gnu.tar.gz)
          - **Windows (x86_64)**: [ia-get-${TAG_NAME}-x86_64-pc-windows-msvc.zip](https://github.com/Gameaday/ia-get-cli/releases/download/${TAG_NAME}/ia-get-${TAG_NAME}-x86_64-pc-windows-msvc.zip)
          - **macOS (x86_64)**: [ia-get-${TAG_NAME}-x86_64-apple-darwin.tar.gz](https://github.com/Gameaday/ia-get-cli/releases/download/${TAG_NAME}/ia-get-${TAG_NAME}-x86_64-apple-darwin.tar.gz)
          - **macOS (ARM64)**: [ia-get-${TAG_NAME}-aarch64-apple-darwin.tar.gz](https://github.com/Gameaday/ia-get-cli/releases/download/${TAG_NAME}/ia-get-${TAG_NAME}-aarch64-apple-darwin.tar.gz)
          
          ### All Platforms
          See the **Assets** section below for all supported platforms including Linux ARM, musl variants, and .deb packages.
          
          ## 🔐 Integrity Verification
          
          All artifacts include SHA256 checksums for integrity verification:
          
          \`\`\`
          $(cat ALL_HASHES.txt 2>/dev/null || echo "Checksums will be available shortly...")
          \`\`\`
          
          **Usage**: \`sha256sum -c <filename>.sha256\`
          
          ## 📋 Changelog
          
          $(head -n 100 CHANGELOG.md | tail -n +3)
          
          ---
          
          For development builds and latest changes, see the [development release](https://github.com/Gameaday/ia-get-cli/releases/tag/development).
          EOF

      - name: Update release with comprehensive notes
        shell: bash
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          gh release edit $TAG_NAME --notes-file FINAL_RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
