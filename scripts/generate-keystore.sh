#!/bin/bash
# Generate Android signing keystores for Play Store deployment

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ANDROID_DIR="$SCRIPT_DIR/../mobile/flutter/android"

echo "🔐 Android Keystore Setup for Play Store Deployment"
echo "=================================================="
echo ""

# Check if keytool is available
if ! command -v keytool &> /dev/null; then
    echo "❌ keytool not found. Please install Java JDK."
    echo "   macOS: brew install openjdk"
    echo "   Ubuntu: sudo apt install openjdk-11-jdk"
    echo "   Windows: Download from https://adoptopenjdk.net"
    exit 1
fi

echo "✅ keytool found"

# Create android directory if it doesn't exist
mkdir -p "$ANDROID_DIR"
cd "$ANDROID_DIR"

# Check if upload keystore already exists
if [[ -f "upload-keystore.jks" ]]; then
    echo ""
    echo "⚠️  Upload keystore already exists: upload-keystore.jks"
    read -p "Do you want to overwrite it? (y/N): " -r
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Keeping existing keystore."
        exit 0
    fi
    echo "Backing up existing keystore..."
    cp upload-keystore.jks "upload-keystore.jks.backup.$(date +%Y%m%d_%H%M%S)"
fi

echo ""
echo "🔑 Generating upload keystore for Google Play Store..."
echo "This keystore will be used to sign app bundles that you upload to Play Console."
echo ""
echo "You'll be asked for:"
echo "  1. Keystore password (remember this!)"
echo "  2. Key password (can be the same as keystore password)"
echo "  3. Your name and organization details"
echo ""

# Generate upload keystore
keytool -genkey -v -keystore upload-keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias upload

echo ""
echo "✅ Upload keystore generated: $ANDROID_DIR/upload-keystore.jks"

# Create key.properties template if it doesn't exist
if [[ ! -f "key.properties" ]]; then
    echo ""
    echo "📝 Creating key.properties configuration file..."
    
    read -p "Enter keystore password: " -s keystore_password
    echo ""
    read -p "Enter key password (or press Enter to use same as keystore): " -s key_password
    
    if [[ -z "$key_password" ]]; then
        key_password="$keystore_password"
    fi
    
    cat > key.properties << EOF
# Android App Signing Configuration
# Generated by generate-keystore.sh on $(date)

# Upload Key Configuration (for Google Play App Signing)
uploadKeyStore=upload-keystore.jks
uploadKeyAlias=upload
uploadStorePassword=$keystore_password
uploadKeyPassword=$key_password
EOF

    echo ""
    echo "✅ Configuration file created: $ANDROID_DIR/key.properties"
else
    echo "⚠️  key.properties already exists - not overwriting"
fi

echo ""
echo "🎉 Keystore setup complete!"
echo ""
echo "📋 Next steps:"
echo "  1. Keep your keystore file and passwords SECURE"
echo "  2. Back up upload-keystore.jks (never lose this file!)"
echo "  3. Build production app bundle:"
echo "     ./scripts/build-mobile.sh --production --appbundle --store-ready"
echo "  4. Upload the .aab file to Google Play Console"
echo ""
echo "🔒 Security reminders:"
echo "  ⚠️  NEVER commit keystore files or passwords to version control"
echo "  ⚠️  Store keystore backups in a secure location"
echo "  ⚠️  If you lose the upload key, you'll need to contact Google Play support"
echo ""
echo "📖 For complete instructions, see: ANDROID_DEPLOYMENT_GUIDE.md"